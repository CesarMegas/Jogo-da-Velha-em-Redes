# --- IMPORTS ---
from socket import *
import os
import random

#--- VARIÁVEIS ---
serverName = "127.0.0.1"
serverPort = 1200
clientSocket = socket(AF_INET, SOCK_STREAM)
jogarNovamente = "s"
jogadas = 0
quemJoga = 2 # 1 = Turno da CPU | 2 = Turno do Jogador
maxJogadas = 9
vencedor = ""
matriz = [[" ", " ", " "],[" ", " ", " "],[" ", " ", " "]]
#Conecta o client ao server
clientSocket.connect((serverName,serverPort))

#--- FUNÇÔES ---
#Define o visual do tabuleiro
def tela():
    global matriz
    global jogadas
    os.system("cls")
    print("     1    2    3")
    print("1:    " + matriz[0][0] + " | " + matriz[0][1] + " | "+ matriz[0][2])
    print("    -------------")
    print("2:    " + matriz[1][0] + " | " + matriz[1][1] + " | "+ matriz[1][2])
    print("    -------------")
    print("3:    " + matriz[2][0] + " | " + matriz[2][1] + " | "+ matriz[2][2])
    print("Jogadas: " + str(jogadas))


#Define como deve ser o turno do Jogador
def jogadorJoga():
    global jogadas
    global quemJoga
    global maxJogadas

    if quemJoga == 2 and jogadas < maxJogadas:
        #Ajuste feito para o número fornecido coincidir entre a representação gráfica e a posição da linha
        l = l-1

        c = int(input("Coluna.: "))
        #Ajuste feito para o número fornecido coincidir entre a representação gráfica e a posição da coluna
        c = c-1
        
        try:    
            while matriz[l][c] != " ":
                l = int(input("Linha..: "))
                l = l-1

                c = int(input("Coluna.: "))
                c = c-1

            matriz[l][c] = "X"
            quemJoga = 1
            jogadas+=1
            enviarDados()
        except:
            print("Espaço inválido!")


#Analisa o tabuleiro e verifica se houve vitória
def verificarVitoria():
    global matriz
    vitoria = "n"
    simbolos = ["X", "O"]

    for s in simbolos:
        vitoria = "n"
        il = ic = 0

        #Verifica as linhas
        while il < 3:
            soma = 0
            ic = 0
            while ic < 3:
                if(matriz[il][ic] == s):
                    soma+=1
                ic+=1
            if(soma == 3):
                vitoria = s
                break
            il += 1

        if(vitoria != "n"):
            break

        #Verifica as colunas
        il = ic = 0
        while ic < 3:
            soma = 0
            il = 0
            while il < 3:
                if(matriz[il][ic] == s):
                    soma+=1
                il+=1
            if(soma == 3):
                vitoria = s
                break
            ic += 1

        if(vitoria != "n"):
            break

        #Verifica a diagonal Esquerda-Direita
        soma = 0
        idiag = 0

        while idiag <3:
            if(matriz[idiag][idiag] == s):
                soma+=1
            idiag += 1
        if(soma == 3):
            vitoria = s
            break

        #Verifica a diagonal Direita-Esquerda
        soma = 0
        idiagl = 0
        idiagc = 2
        while idiagc >= 0:
            if(matriz[idiagl][idiagc] == s):
                soma+=1
            idiagl += 1
            idiagc -= 1
        if(soma == 3):
            vitoria = s
            break
    return vitoria


#Redesenha/Redefine o tabuleiro
def redefinir():

    global matriz
    global jogadas
    global quemJoga
    global maxJogadas
    global vencedor
    jogadas = 0
    quemJoga = 2 
    maxJogadas = 9
    vencedor = ""
    matriz = [[" ", " ", " "],[" ", " ", " "],[" ", " ", " "]]


#Envia os dados para o servidor
def enviarDados():
    clientSocket.send(matriz)
    clientSocket.send(quemJoga)
    clientSocket.send(matriz)


#Envia os dados para o servidor
def receberDados():
    clientSocket.recv(matriz)
    clientSocket.recv(quemJoga)
    clientSocket.recv(matriz)


#Loop principal do Jogo
while(jogarNovamente == "s"):
    while True:
        tela()
        jogadorJoga()
        receberDados()

        vencedor = verificarVitoria()
        if(vencedor != "n") or (jogadas >= maxJogadas):
            break

    print("Fim de Jogo")
    if vencedor == "X":
        print("Resultado: Você venceu!")
    elif vencedor == "O":
        print("A CPU venceu")
    else:
        print("Resultado: Empate")
    jogarNovamente = input("Digite [s] para continuar ou [n] para sair: ")
    redefinir()
if (jogarNovamente == "n"):
    clientSocket.close()

